Index: src/main/java/database/MongoDBAccess.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package database;\n\nimport com.mongodb.BasicDBObject;\nimport com.mongodb.DBCollection;\nimport com.mongodb.DBObject;\nimport entity.CommonScheduleItem;\nimport entity.CommonTask;\nimport requestModel.ScheduleItemRequestModel;\nimport requestModel.TaskRequestModel;\nimport useCaseInteractor.DataAccess;\nimport java.util.ArrayList;\n\npublic class MongoDBAccess implements DataAccess {\n\n    private final String username;\n\n    private final DBCollection collection;\n\n    public MongoDBAccess(DBCollection collection, String username) {\n\n        this.username = username;\n        this.collection = collection;\n    }\n\n\n    @Override\n    public void setSchedule(ScheduleItemRequestModel requestModel) {\n\n    }\n\n    @Override\n    public CommonScheduleItem getSingleSchedule(ScheduleItemRequestModel requestModel) {\n        return null;\n    }\n\n    @Override\n    public ArrayList<CommonScheduleItem> getUserEntireSchedule() {\n        return null;\n    }\n\n    @Override\n    public void setTask(TaskRequestModel requestModel) {\n\n    }\n\n    @Override\n    public CommonTask getSingleTask(TaskRequestModel requestModel) {\n        return null;\n    }\n\n    @Override\n    public ArrayList<CommonTask> getUserEntireTask() {\n        return null;\n    }\n\n    @Override\n    public void savetoDB(ScheduleItemRequestModel requestModel) {\n        // needs to find the user to save to\n        //Will give each user an id, we'll use the id to run through DB\n\n    }\n\n\n\n    @Override\n    public ArrayList<CommonScheduleItem> getUserSchedule(ScheduleItemRequestModel requestModel) {\n        return null;\n    }\n\n    @Override\n    public ArrayList<CommonTask> getUserTask(TaskRequestModel requestModel) {\n        return null;\n    }\n\n    @Override\n    public void deleteFromDB(ScheduleItemRequestModel requestModel) {\n\n    }\n\n    @Override\n    public boolean getUserExist(String username){\n        return this.collection.findOne(username) != null;\n    }\n\n    @Override\n    public DBObject getUserData(){\n        return collection.findOne(this.username);\n    }\n\n    @Override\n    public void setPassword(String password){\n        DBObject query = new BasicDBObject(\"_id\", this.username);\n\n        DBObject updateObj = new BasicDBObject(\"password\", password);\n\n        collection.update(query, updateObj);\n    }\n\n    @Override\n    public Object getFollowing(){\n        return collection.findOne(this.username).get(\"followers\");\n    }\n\n    @Override\n    public void appendFollowing(String username){\n        DBObject query = new BasicDBObject(\"_id\", this.username);\n\n        DBObject updateObj = new BasicDBObject(\"followers\", username);\n\n        collection.update(query, new BasicDBObject(\"$push\", updateObj));\n    }\n\n    @Override\n    public Object getRequests(){\n        return collection.findOne(this.username).get(\"requests\");\n    }\n\n    @Override\n    public void appendRequests(String username){\n        DBObject query = new BasicDBObject(\"_id\", this.username);\n\n        DBObject updateObj = new BasicDBObject(\"requests\", username);\n\n        collection.update(query, new BasicDBObject(\"$push\", updateObj));\n    }\n\n\n\n\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/database/MongoDBAccess.java b/src/main/java/database/MongoDBAccess.java
--- a/src/main/java/database/MongoDBAccess.java	(revision ae85d3bafb80dcb35c7fde8d60c4d8779969a00c)
+++ b/src/main/java/database/MongoDBAccess.java	(date 1669569639520)
@@ -123,9 +123,4 @@
 
         collection.update(query, new BasicDBObject("$push", updateObj));
     }
-
-
-
-
-
 }
Index: src/main/java/database/MongoTesting.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package database;//package database;\n\nimport com.mongodb.*;\n\nimport java.net.UnknownHostException;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class MongoTesting {\n    public static void main(String[] args) throws UnknownHostException {\n\n        //My local database\n//        MongoClient mongoClient = new MongoClient(new MongoClientURI(\"mongodb://localhost:27017\"));\n\n        //My remote database\n        MongoClient mongoClient = new MongoClient(new MongoClientURI(\"mongodb+srv://stevenli:stevenli@cluster0.koruj0t.mongodb.net/?retryWrites=true&w=majority\"));\n\n        //Brians remote database\n//        MongoClient mongoClient = new MongoClient(new MongoClientURI(\"mongodb+srv://123:123@cluster1.d3e1rhp.mongodb.net/?retryWrites=true&w=majority\"));\n\n\n        DB database = mongoClient.getDB(\"schedule6-testingdb\");\n\n        DBCollection collection = database.getCollection(\"schedule6-testingcollection\");\n//        ArrayList<String> list = new ArrayList<>();\n//        list.add(\"Apple\");\n//        list.add(\"Orange\");\n//        list.add(\"Banana\");\n//        DBObject person = new BasicDBObject(\"_id\", \"steven123\")\n//                .append(\"name\", list);\n//\n//        collection.insert(person);\n        DBObject query = new BasicDBObject(\"_id\", \"nizar1234\");\n\n        DBObject updateObj = new BasicDBObject(\"name\", \"pineapple\");\n\n        collection.update(query, new BasicDBObject(\"$push\", updateObj));\n    }\n}\n\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/database/MongoTesting.java b/src/main/java/database/MongoTesting.java
--- a/src/main/java/database/MongoTesting.java	(revision ae85d3bafb80dcb35c7fde8d60c4d8779969a00c)
+++ b/src/main/java/database/MongoTesting.java	(date 1669420600588)
@@ -11,7 +11,7 @@
     public static void main(String[] args) throws UnknownHostException {
 
         //My local database
-//        MongoClient mongoClient = new MongoClient(new MongoClientURI("mongodb://localhost:27017"));
+//      MongoClient mongoClient = new MongoClient(new MongoClientURI("mongodb://localhost:27017"));
 
         //My remote database
         MongoClient mongoClient = new MongoClient(new MongoClientURI("mongodb+srv://stevenli:stevenli@cluster0.koruj0t.mongodb.net/?retryWrites=true&w=majority"));
@@ -23,19 +23,38 @@
         DB database = mongoClient.getDB("schedule6-testingdb");
 
         DBCollection collection = database.getCollection("schedule6-testingcollection");
-//        ArrayList<String> list = new ArrayList<>();
-//        list.add("Apple");
-//        list.add("Orange");
-//        list.add("Banana");
-//        DBObject person = new BasicDBObject("_id", "steven123")
-//                .append("name", list);
-//
-//        collection.insert(person);
-        DBObject query = new BasicDBObject("_id", "nizar1234");
+
+        /**
+        ArrayList<String> list = new ArrayList<>();
+        list.add("Apple");
+        list.add("Orange");
+        list.add("Banana");
+        DBObject person = new BasicDBObject("_id", "nizar123456")
+                .append("name", list);
+
+        collection.insert(person);
+
+        ArrayList<String> list2 = new ArrayList<>();
+        list2.add("Apple");
+        list2.add("Orange");
+        list2.add("Banana");
+        DBObject person2 = new BasicDBObject("_id", "nizar123456")
+                .append("name2", list2);
+
+        collection.insert(person2);
+         **/
+
+
+        //collection.findOne(_id: <username>);
+        System.out.println(collection.findOne("nizar12346789").get("name"));
+        //DBObject query = new BasicDBObject("_id", "nizar1234");
+
+        //DBObject updateObj = new BasicDBObject("name", "watermelon");
 
-        DBObject updateObj = new BasicDBObject("name", "pineapple");
+        //collection.update(query, new BasicDBObject("$push", updateObj));
+        //collection.update(query, updateObj);
 
-        collection.update(query, new BasicDBObject("$push", updateObj));
+
     }
 }
 
