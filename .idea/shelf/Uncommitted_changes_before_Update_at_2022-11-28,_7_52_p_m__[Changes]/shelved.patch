Index: src/main/java/database/MongoTesting.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package database;//package database;\n\nimport com.mongodb.*;\nimport javafx.scene.control.TextField;\n\nimport java.net.UnknownHostException;\nimport java.time.LocalDate;\nimport java.time.LocalTime;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.Objects;\n\npublic class MongoTesting {\n    public static void main(String[] args) throws UnknownHostException {\n\n        //My local database\n//        MongoClient mongoClient = new MongoClient(new MongoClientURI(\"mongodb://localhost:27017\"));\n\n        //Stevens remote database\n        MongoClient mongoClient = new MongoClient(new MongoClientURI(\"mongodb+srv://stevenli:stevenli@cluster0.koruj0t.mongodb.net/?retryWrites=true&w=majority\"));\n\n        //Brians remote database\n//        MongoClient mongoClient = new MongoClient(new MongoClientURI(\"mongodb+srv://123:123@cluster1.d3e1rhp.mongodb.net/?retryWrites=true&w=majority\"));\n\n\n        DB database = mongoClient.getDB(\"schedule6-testingdb\");\n        DBCollection collection = database.getCollection(\"schedule6-testingcollection\");\n\n        ArrayList<Object> list = new ArrayList<>();\n        ArrayList<Object> sublist_1 = new ArrayList<>();\n        sublist_1.add(\"Meeting\");\n        sublist_1.add(LocalDate.of(2022, 11, 26));\n        sublist_1.add(LocalTime.of(12, 15));\n        sublist_1.add(LocalTime.of(2, 30));\n        ArrayList<Object> sublist_2 = new ArrayList<>();\n        sublist_2.add(\"Workout\");\n        sublist_2.add(LocalDate.of(2022, 11, 26));\n        sublist_2.add(LocalTime.of(2, 15));\n        sublist_2.add(LocalTime.of(3, 30));\n        list.add(sublist_2);\n        list.add(sublist_1);\n        DBObject person = new BasicDBObject(\"_id\", \"nizar\")\n                .append(\"schedule\", list);\n        collection.insert(person);\n\n        DBObject query = new BasicDBObject(\"_id\", \"test_user123\");\n\n        // Adding to DB\n        list.remove(sublist_1);\n        DBObject updateObj = new BasicDBObject(\"schedule\", list);\n        collection.update(query, new BasicDBObject(\"$set\", updateObj));\n\n        // Getting from DB\n//        DBObject document = collection.findOne(query);\n//        BasicDBList list = (BasicDBList) document.get(\"schedule\");\n//\n//        ArrayList<ArrayList<Object>> res = new ArrayList<>();\n//\n//        for (Object sublist: list) {\n//            res.add((ArrayList<Object>) sublist);\n//        }\n//\n//        System.out.println(res.size());\n    }\n}\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/database/MongoTesting.java b/src/main/java/database/MongoTesting.java
--- a/src/main/java/database/MongoTesting.java	(revision b5a3e548149d3e9b89c3377b3916997ef22ce09d)
+++ b/src/main/java/database/MongoTesting.java	(date 1669678858922)
@@ -27,6 +27,7 @@
         DB database = mongoClient.getDB("schedule6-testingdb");
         DBCollection collection = database.getCollection("schedule6-testingcollection");
 
+        String password = "123";
         ArrayList<Object> list = new ArrayList<>();
         ArrayList<Object> sublist_1 = new ArrayList<>();
         sublist_1.add("Meeting");
@@ -40,16 +41,18 @@
         sublist_2.add(LocalTime.of(3, 30));
         list.add(sublist_2);
         list.add(sublist_1);
-        DBObject person = new BasicDBObject("_id", "nizar")
-                .append("schedule", list);
+        DBObject person = new BasicDBObject("_id", "selena")
+                .append("schedule", list).append("password", password);
         collection.insert(person);
 
         DBObject query = new BasicDBObject("_id", "test_user123");
 
         // Adding to DB
+        /**
         list.remove(sublist_1);
         DBObject updateObj = new BasicDBObject("schedule", list);
         collection.update(query, new BasicDBObject("$set", updateObj));
+         **/
 
         // Getting from DB
 //        DBObject document = collection.findOne(query);
Index: src/main/java/controller/Schedule/TimetableController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package controller.Schedule;\n\nimport com.calendarfx.view.CalendarView;\nimport com.calendarfx.model.Calendar;\nimport com.calendarfx.model.CalendarSource;\nimport javafx.application.Platform;\nimport javafx.event.ActionEvent;\nimport javafx.fxml.FXML;\nimport javafx.scene.control.Button;\nimport javafx.scene.control.Label;\nimport javafx.scene.layout.GridPane;\n\nimport java.time.LocalDate;\nimport java.time.LocalTime;\nimport java.time.ZoneId;\n\n\npublic class TimetableController {\n\n    @FXML\n    private Label TimetableUserName;\n    @FXML\n    private GridPane Gridlock;\n    @FXML\n    private Button saveButton;\n    @FXML\n    private Button newEvent;\n    public static Label usernameChageLabel;\n\n    private CalendarView calendar;\n\n    ZoneId TIMEZONE_ET = ZoneId.of(\"America/Toronto\");\n    LocalDate startDate = LocalDate.of(-99999,1,1);\n    LocalDate endDate = LocalDate.of(99999,12,31);\n    @FXML\n    private void printCalendarEntries(){\n        for (Calendar temp : calendar.getCalendars()) {\n            System.out.println(temp.findEntries(startDate, endDate, TIMEZONE_ET));\n        }\n    }\n    @FXML\n    public void scheduleInputsButton(ActionEvent event){}\n\n\n\n    private void loadCalendar() {\n        calendar = new CalendarView();\n\n        Calendar classes = new Calendar(\"null\");\n        Calendar meetings = new Calendar(\"Meetings\");\n\n        classes.setStyle(Calendar.Style.STYLE7);\n        meetings.setStyle(Calendar.Style.STYLE2);\n\n        CalendarSource myCalendarSource = new CalendarSource(\"Timetable\");\n        myCalendarSource.getCalendars().addAll(classes, meetings);\n\n        calendar.getCalendarSources().addAll(myCalendarSource);\n\n        calendar.setRequestedTime(LocalTime.now());\n\n\n        Thread updateTimeThread = new Thread(\"Calendar: Update Time Thread\") {\n            @Override\n            public void run() {\n                while (true) {\n                    Platform.runLater(() -> {\n                        calendar.setToday(LocalDate.now());\n                        calendar.setTime(LocalTime.now());\n                    });\n\n                    try {\n                        // update every 10 seconds\n                        sleep(10000);\n                    } catch (InterruptedException e) {\n                        e.printStackTrace();\n                    }\n\n                }\n            }\n        };\n\n        updateTimeThread.setPriority(Thread.MIN_PRIORITY);\n        updateTimeThread.setDaemon(true);\n        updateTimeThread.start();\n        //calendar.showMonthPage();\n        calendar.showWeekPage();\n        calendar.setShowAddCalendarButton(true);\n        calendar.setShowPrintButton(false);\n        calendar.setShowDeveloperConsole(false);\n        Gridlock.getChildren().add(calendar);\n    }\n\n    public void initialize(){\n        usernameChageLabel = TimetableUserName;\n        loadCalendar();\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/controller/Schedule/TimetableController.java b/src/main/java/controller/Schedule/TimetableController.java
--- a/src/main/java/controller/Schedule/TimetableController.java	(revision b5a3e548149d3e9b89c3377b3916997ef22ce09d)
+++ b/src/main/java/controller/Schedule/TimetableController.java	(date 1669678462888)
@@ -3,6 +3,10 @@
 import com.calendarfx.view.CalendarView;
 import com.calendarfx.model.Calendar;
 import com.calendarfx.model.CalendarSource;
+import com.mongodb.DB;
+import com.mongodb.DBCollection;
+import com.mongodb.MongoClient;
+import com.mongodb.MongoClientURI;
 import javafx.application.Platform;
 import javafx.event.ActionEvent;
 import javafx.fxml.FXML;
@@ -10,9 +14,13 @@
 import javafx.scene.control.Label;
 import javafx.scene.layout.GridPane;
 
+import java.net.UnknownHostException;
 import java.time.LocalDate;
 import java.time.LocalTime;
 import java.time.ZoneId;
+import java.util.ArrayList;
+import database.MongoDBAccess;
+import useCaseInteractor.User.userCollection;
 
 
 public class TimetableController {
@@ -46,6 +54,19 @@
     private void loadCalendar() {
         calendar = new CalendarView();
 
+
+        //MongoDBAccess client = new MongoDBAccess(collection, userCollection.getUsername());
+
+        //ArrayList<String> followers = (ArrayList<String>) client.getFollowing();
+
+        //ArrayList<java.util.Calendar> calendars = new ArrayList<>();
+
+        //for(String e : followers){
+        //    Calendar friends = new Calendar(e);
+        //    friends.setStyle(Calendar.Style.STYLE7);
+        //}
+
+        //EVERYTHING BELOW IS STABLE
         Calendar classes = new Calendar("null");
         Calendar meetings = new Calendar("Meetings");
 
@@ -91,8 +112,23 @@
         Gridlock.getChildren().add(calendar);
     }
 
+
     public void initialize(){
         usernameChageLabel = TimetableUserName;
         loadCalendar();
     }
+
+
+    public void main(String[] args) throws UnknownHostException {
+        MongoClient mongoClient = new MongoClient(new MongoClientURI("mongodb+srv://stevenli:stevenli@cluster0.koruj0t.mongodb.net/?retryWrites=true&w=majority"));
+
+        //Brians remote database
+//        MongoClient mongoClient = new MongoClient(new MongoClientURI("mongodb+srv://123:123@cluster1.d3e1rhp.mongodb.net/?retryWrites=true&w=majority"));
+
+
+        DB database = mongoClient.getDB("schedule6-testingdb");
+        DBCollection collection = database.getCollection("schedule6-testingcollection");
+
+        //this.loadCalendar(collection);
+    }
 }
